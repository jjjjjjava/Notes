{"layout":"timeline","root":{"data":{"text":"<p><strong>VSOA异构总线通信框架</strong></p>","richText":true,"expand":true,"isActive":false,"uid":"663df7ab-b01f-41cd-ab3a-c164c8074d4f"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">proxy.cpp</span></p>","uid":"466a2fdd-c2f5-4cf4-9a6e-1d2f56e16def","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">启动日志管理</span></p>","uid":"002b57cb-a6c1-484c-899b-4b0efe00eb41","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">启动位置服务线程</span></p>","uid":"1cd96b9f-cbe9-4c21-bf53-5310cc2bf04a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">启动主控线程proxy_task</span></p>","uid":"10616e52-c929-4cbb-8a0e-83998caafe12","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 18px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">启动日志管理zlog</span></p>","generalization":null,"richText":true,"expand":true,"isActive":false,"uid":"acb99b85-de3f-42b8-8923-63af2e19afac"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;\">获取完整配置文件路径/proxy/config</span></p>","uid":"6ad0d483-bff9-42b5-834b-c31fe1c49186","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">根据配置文件初始化日志系统</span></p>","uid":"886b9be8-7158-411a-b192-d8b7b5212bd4","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">为当前proxy进程获取专属日志类别：proxy_cat</span></p>","uid":"37109d56-e3d6-498e-9737-c0d636238aaa","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 18px; color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;\">启动位置服务功能position</span></p>","uid":"16c59ac9-3f3d-4b47-8a1b-e702dd0e340f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">activate(THR_NEW_LWP | THR_JOINABLE | THR_INHERIT_SCHED)创建线程</span></p>","expand":true,"richText":true,"isActive":false,"uid":"34e821b4-f5af-4493-9a5c-b2e77fc8513b"},"children":[]},{"data":{"text":"<p><span style=\"font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54); font-size: 14px;\">进入svc，线程主入口</span></p>","expand":true,"richText":true,"isActive":false,"uid":"410d6fe2-ca6a-45d9-ab22-437edaea0238"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;\">OnStart()初始化并启动位置服务</span></p>","uid":"07ccd1fe-8184-4b4f-82b9-1bc3aecf1266","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">调用ConfigModel从配置文件中解析本地服务和代理服务，并将其保存到local_srv这个list列表中</span></p>","uid":"33a0495e-3415-4a63-ad20-3fa9b5c9f602","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">遍历local_srv，解析成sockaddr_in结构体，以“服务名：sockaddr_in”的键值对存储在query_list这个map容器中</span></p>","uid":"68afc332-f440-491d-9c3a-6e6bbdcd0f96","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">创建位置服务的服务端</span></p>","uid":"6e10b515-639e-46b5-b166-f7a1996d56a3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">设置位置服务器地址信息：ip = 127.0.0.1 , port = 3000</span></p>","uid":"de040809-c276-4413-ad5e-4dd36a620951","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">创建位置服务，同时设置其回调函数</span></p>","uid":"169e19db-5f00-4362-97b2-dbb80b5421c1","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">启动位置服务</span></p>","uid":"009d3ee4-2d1b-4b6b-90f6-b96bce44d9a3","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54); font-size: 14px;\">事件循环，处理对位置服务器的查询请求，接收到请求进入位置服务回调函数</span></p>","uid":"55d7b136-e5ff-4165-9c41-fbb26376f7aa","expand":true,"richText":true,"isActive":false,"associativeLineTargets":["169e19db-5f00-4362-97b2-dbb80b5421c1"],"associativeLineTargetControlOffsets":[[{"x":22.5,"y":0},{"x":-22.5,"y":0}]],"associativeLinePoint":[{"startPoint":{"x":2075.5,"y":880.5},"endPoint":{"x":2120.5,"y":841.5}}]},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">回调函数根据query_name在map中查找匹配的服务器</span></p>","uid":"da9ec77b-69fe-40ed-9551-2b2941463980","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">vsoa_position_server_response 返回对应服务端的地址结构</span></p>","uid":"d7c2c3d6-d16b-4101-8443-2c4c1c087e37","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">OnStop()结束位置服务</span></p>","expand":true,"richText":true,"isActive":false,"uid":"be739dd9-2ea6-4d97-93be-572092584baa"},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">启动主控制线程proxy_task</span></p>","uid":"ffd13d88-b4e4-4e9e-aad4-3dae1f10acde","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">activate(THR_NEW_LWP | THR_JOINABLE | THR_INHERIT_SCHED)创建线程</span></p>","uid":"234c6f52-121f-4e5a-b14b-8ed60daca27d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">进入svc，线程主入口</span></p>","expand":true,"richText":true,"isActive":false,"uid":"a51c5c11-1101-43a5-81c0-892dae9bb3f5"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">OnStart()启动代理服务</span></p>","uid":"baa9a193-3e83-4e79-8c0e-0ffbed69763d","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">连接到串口</span></p>","uid":"17315cab-e0ea-4e7e-976c-604f80f03b3d","expand":true,"richText":true,"isActive":false,"associativeLineTargets":["06a306a4-7212-4671-b9a8-d67a61fc75ff"],"associativeLineTargetControlOffsets":[[{"x":153.09091634066363,"y":-77.28531599119833},{"x":-17.95132645132344,"y":-1.56240291547482}]],"associativeLinePoint":[{"startPoint":{"x":2887.0032117534674,"y":608.5,"dir":"top","range":-35.00321175346759},"endPoint":{"x":3193.5,"y":511.86799601518555,"dir":"left","range":-0.36799601518556835}}]},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">为代理服务创建ProxySession代理会话</span></p>","uid":"be8f2c44-3a7a-4637-9d91-288dd5845c08","expand":true,"richText":true,"isActive":false,"associativeLineTargets":["bf844dc6-97b9-41b2-837e-ceed8ef6a60f"],"associativeLineTargetControlOffsets":[[{"x":-28.95132645132344,"y":-0.9071785003600326},{"x":-999.6242239133853,"y":-183.19440690028927}]],"associativeLinePoint":[{"startPoint":{"x":3074.5,"y":654.8491352364344,"dir":"right","range":4.150864763565496},"endPoint":{"x":4012.4456247347894,"y":493.5,"dir":"top","range":97.55437526521084}}],"associativeLineText":{"bf844dc6-97b9-41b2-837e-ceed8ef6a60f":""}},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">为本地服务创建ClientSession客户端会话</span></p>","uid":"c0df6ec7-15e3-4924-bf2c-e05573e765cd","expand":true,"richText":true,"isActive":false,"associativeLineTargets":["042311de-83ae-49da-aae5-d215b9c9e361"],"associativeLineTargetControlOffsets":[[{"x":-298.4726952155861,"y":-369.27583527583516},{"x":-1049.4444444444453,"y":-11.149590134676544}]],"associativeLinePoint":[{"startPoint":{"x":2932.3615841044743,"y":678.5,"dir":"top","range":13.13841589552558},"endPoint":{"x":5640,"y":509.2626437477303,"dir":"left","range":2.2373562522696835}}],"associativeLineText":{"042311de-83ae-49da-aae5-d215b9c9e361":""}},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">创建回射定时器</span></p>","uid":"ec231f3d-77c5-4fa7-a054-b7decefe0118","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">创建接收线程msg_thread，并设置线程启动函数：OnMsgHandle</span></p>","uid":"c08785cf-aeab-4ae4-aad9-de52d049ea1f","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">设置线程的拥有者</span></p>","uid":"12005fcf-0ecd-4222-845a-0a983d1f128e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">重置和运行反应器</span></p>","uid":"849ddc36-aca8-4670-9c29-2392d98a0c00","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">等待接收线程msg_thread运行完成</span></p>","uid":"762fdc19-65bd-4a50-a662-8e15073c8f1a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54); font-size: 14px;\">OnStop退出代理服务，结束主控线程</span></p>","uid":"6c902e21-f1bd-4e9d-b51d-4150aea232be","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">连接到串口</span></p>","expand":true,"richText":true,"isActive":false,"uid":"06a306a4-7212-4671-b9a8-d67a61fc75ff"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">调用ConfigModel从配置文件中解析总线信息，并将其保存到SerialConnectParam串口连接参数结构体中</span></p>","uid":"3da8fbc4-4d66-4e6b-a426-48094e8fe3f1","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">将该结构体的各个部分拼接成一个格式化的字符串conn_param，保存串口连接参数</span></p>","uid":"7c377487-e4db-4a2d-8cf2-c6bca93b077d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">调用CommunicateInitConn初始化串口通信连接</span></p>","uid":"35dc1a5d-e829-46fd-bcd1-2817138ee49c","expand":true,"richText":true,"isActive":false,"note":"传递conn_param串口参数，返回串口连接的句柄"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">开始初始化串口通信连接</span></p>","uid":"f6346cb2-ff60-45a2-ac21-29174d16fcc7","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">创建PeerConnection 类型连接对象conn</span></p>","uid":"82fa4dfe-a912-48c4-9399-39fdb7118c8e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">解析并设置连接的参数</span></p>","uid":"2b361ba5-740d-46bb-bee3-dd0fe45ca936","expand":true,"richText":true,"isActive":false,"note":"todo\n这里是概括说明，实际有很多，可以去看"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">将conn强转为CONNECTHANDLE网络连接相关的句柄返回</span></p>","uid":"de8ffcd6-f269-4503-a4fc-47c11ec5a37d","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"font-size: 18px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">为代理服务创建ProxySession代理会话</span></p>","expand":true,"richText":true,"isActive":false,"uid":"bf844dc6-97b9-41b2-837e-ceed8ef6a60f"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">调用ConfigModel从配置文件中解析代理服务的地址信息，并保存到proxy_server_list中</span></p>","uid":"bf11de6e-18f7-48b2-85c9-f49af710e79d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">for循环遍历proxy_server_list，为每一个元素创建代理服务会话，启动代理服务会话，保存代理服务会话</span></p>","uid":"3bf9b5bc-97a5-4d79-92bc-5f4a7f5f514a","expand":true,"richText":true,"isActive":false,"note":"这里创建时传递域名，port，和loacte_station\n\n代理服务会话主要是创建代理服务器，监听来自本地对对端的转接（这个转接是通过位置服务器提供的地址结构实现的）到代理服务器的rpc请求，经过处理后将rpc请求转发给对端"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">创建代理服务会话：对列表中每一个成员使用ProxySession* ssn = new ProxySession创建代理服务会话 </span></p>","uid":"f11fb5be-72d5-44e7-a1c6-d58f67368d34","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">ssn-&gt;Start()启动代理服务会话</span></p>","uid":"401aee34-2b1b-4f72-8e01-a655a9baa901","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">activate(THR_NEW_LWP | THR_JOINABLE | THR_INHERIT_SCHED)创建线程</span></p>","uid":"fa04b3f0-bd17-48ef-9279-1fda761a4783","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">进入svc函数（线程启动后的主入口）</span></p>","expand":true,"richText":true,"isActive":false,"uid":"d4b5e8ae-24bd-4abb-a213-b7afefe73f1a"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">创建并启动代理服务端</span></p>","uid":"0d847619-ebb4-4dc3-86bf-1fbf64a42c37","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">设置代理服务器的地址信息：port = 代理服务port，addr = 127.0.0.1</span></p>","uid":"7036a973-a320-4504-bf78-8bd873a8c6f4","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">设置代理服务器名称 {\"name\":\"server_name\"} </span></p>","uid":"bf9af172-ce66-4f4b-ab2c-57c57dfbddb8","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">创建代理服务器</span></p>","uid":"a455019d-becb-4244-aeca-f0d917575b8c","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">为对当前服务器的所有url请求添加监听器OnRpcRequestProxy</span></p>","uid":"8dc63ec4-3d5e-475f-8b8a-1e10e7d15391","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">启动代理服务器</span></p>","uid":"d4f2667d-b88e-4b60-b1ea-cf0865438e6f","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">事件循环监听来自本地对对端的转接到代理服务器的请求，调用回调函数进行处理</span></p>","uid":"711ddebb-f0cb-4a6e-977e-c62ab54575ed","expand":true,"richText":true,"isActive":false,"generalization":null},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">回调函数开始</span></p>","uid":"b81f9585-d7c7-4e95-9e55-a7595aaf02d4","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">解析来自本地对对端的转接到代理服务器的rpc请求，将请求信息和负载数据保存到msg结构体中，其中负载数据经过Base64编码</span></p>","uid":"d942742e-32d9-4f3b-bff8-6d9392c49649","expand":true,"richText":true,"isActive":false,"note":"//存储发送到对端的RPC请求信息\nrpc_call_msg_s msg;\n\ntypedef struct rpc_call_msg_s {\nint src; // 当前客户端ID\nstd::string dst;\nint seqno;\nstd::string url;\nstd::string param;\nstd::string data;\nint timeout;\n} rpc_call_msg;"},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">用ctx变量保存客户端信息和请求头信息</span></p>","uid":"1c661d55-8976-4b35-8164-122aa6566e34","expand":true,"richText":true,"isActive":false,"note":"    struct rpc_call_ctx {\n        vsoa_cli_id_t client;\n        vsoa_header_t header;\n    };\n    rpc_call_ctx ctx;\n    \n    //存储客户端ID\n    ctx.client = cid;\n    //存储请求头\n    memcpy(&ctx.header, vsoa_hdr, sizeof(vsoa_header_t));"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">将ctx与当前请求的序列号：proxy_ssn-&gt;seqno关联</span></p>","uid":"317fc618-3e68-42cc-8e46-b1bbe579ad2c","expand":true,"richText":true,"isActive":false,"note":"    std::map<int, rpc_call_ctx> rpc_call_seq2ctx;\n    \n    //在上锁情况下，进行关联\n    proxy_ssn->seq_mutex.acquire();\n    proxy_ssn->rpc_call_seq2ctx[proxy_ssn->seqno] = ctx;\n    proxy_ssn->seq_mutex.release();"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">检查并重置序列号</span></p>","uid":"efbf2080-0b9e-41a9-9e06-3c610367c3d1","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">DoRpcRequestSend(msg)发送数据</span></p>","uid":"14230baf-370f-49d4-af37-b21c49b301d6","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">判断对端是否活跃</span></p>","uid":"83ec2a16-accd-4d45-91bc-50b9036f540a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">根据msg结构体构造发送用的JSON字符串</span></p>","uid":"33bc331b-cd56-4821-93ed-a29fda7264eb","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">调用CommunicateSend通过串口发送数据到另一块板块与其连接的串口中</span></p>","uid":"1efdc651-600d-4d9f-a205-6b52e32ed5ae","expand":true,"richText":true,"isActive":false,"note":"    ret = CommunicateSend(connect_handle, buffer, send_len, 500);\n    connect_handle：串口连接的句柄\n    buffer        ：构造的JSON数据\n"},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">关闭代理服务会话</span></p>","uid":"cd4effc2-9b51-4c3f-b8e1-989cae7453ba","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">proxy_server_ssn[(*it_proxy).server] = ssn保存代理服务会话</span></p>","uid":"44d08e7f-f795-4e97-8089-f2550ca30c62","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">为本地服务创建ClientSession客户端会话</span></p>","expand":true,"richText":true,"isActive":false,"uid":"042311de-83ae-49da-aae5-d215b9c9e361","note":"本地服务创建客户端服务，用于将对端的rpc请求转发至本地的对应客户端"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">调用ConfigModel从配置文件中解析本地服务的地址信息，并保存到proxy_server_list中</span></p>","uid":"3b88d800-40ac-4258-91a2-f1b587e02eef","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">for循环遍历local_server_list，为每一个元素创建本地服务会话，启动本地服务会话，保存本地服务会话</span></p>","uid":"a26ebd1e-9cde-4937-b48a-0c3b7e03b875","expand":true,"richText":true,"isActive":false,"note":"这里new ClientSession时没有传递任何参数"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">创建本地服务会话：对列表中每一个成员使用ClientSession* ssn = new ClientSession()创建本地服务会话 </span></p>","uid":"c1de83d8-e78d-4438-9959-fc863243bd88","expand":true,"richText":true,"isActive":false,"note":""},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">ssn-&gt;OnStart()启动本地服务会话</span></p>","uid":"fa1eb128-7c92-4ae0-8e26-dee0a4ad7863","expand":true,"richText":true,"isActive":false,"generalization":{"text":"<p><span style=\"font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54); font-size: 14px;\">这里的客户端会话只是保持与rpc_server的连接，方便后续通过客户端实例向rpc_server转发rpc请求</span></p>","expand":true,"isActive":false,"richText":true}},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">clientauto = vsoa_client_auto_create(onmessage, this)创建客户端自动机，设置连接回调函数onmessage:</span></p>","uid":"b35dd367-3ad4-4ce8-8921-e389a799d8ed","expand":true,"richText":true,"isActive":false,"note":"这里的OnMessage回调函数实际没用\n"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">client&nbsp;= vsoa_client_auto_handle(clientauto)从自动机中获取客户端实例</span></p>","expand":true,"richText":true,"isActive":false,"uid":"ea708cfb-dbd8-405a-868c-0dfcf2db5ad3"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">构建本地服务名：vsoa://A1</span></p>","uid":"da32273c-c940-40aa-92e3-b7768a8d9d10","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">vsoa_client_auto_start(clientauto, server_url, MY_SERVER_PASSWD, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NULL, 0, 1000, 1000, 1000);连接到本地服务端</span></p>","expand":true,"richText":true,"isActive":false,"uid":"45dd5a87-9000-438e-ba41-016a9e72a48e"},"children":[]}]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">local_client_ssn[(*it_local).server] = ssn保存本地服务会话</span></p>","expand":true,"richText":true,"isActive":false,"uid":"dc010bd7-41b5-423d-b0f6-eb53ef8eed5f"},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">接收线程msg_thread，进入OnMsgHandle函数，传递ProxyTask* proxy作为参数</span></p>","expand":true,"richText":true,"isActive":false,"uid":"254cf0c3-0457-480b-a06d-ea3bfeac3533"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">开始</span></p>","uid":"f65290b1-cc83-434d-9c65-bdc271492876","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">while(!proxy-&gt;bstop)循环从总线中读取数据并进行处理</span></p>","expand":true,"richText":true,"isActive":false,"uid":"580574e9-7244-4323-974e-1c5b95dbd1f1","note":""},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">ret = CommunicateRecv(proxy-&gt;connect_handle, proxy-&gt;cur_recvbuf + proxy-&gt;data_len, MAX_BUF_LEN - proxy-&gt;data_len , 3000); 从proxy的连接句柄中读取数据到proxy的缓冲区中</span></p>","uid":"dc93e9c3-2e1a-49b2-8ca0-4fa9af41b81f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">接收成功，打印接收到的数据</span></p>","uid":"acea76a1-5fc9-4101-b5e7-c28c16c88690","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">ret = proxy-&gt;ParseRecvMessage(payload, code);解析当前数据，获取消息类型，根据消息类型进行后续处理</span></p>","uid":"f2c46814-b6ca-4058-ac97-4b792e6194b0","expand":true,"richText":true,"isActive":false,"note":"这里会向接收处理函数传递接收到的JSON字符串数据作为参数\n"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">// 心跳回射&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; proxy-&gt;HandleHeartBeatMsg()</span></p>","uid":"f8d87290-a7c6-4fa4-b6e0-601ddb332054","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">// rpc 请求&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy-&gt;HandleRpcRequestMsg(payload)</span></p>","expand":true,"richText":true,"isActive":false,"uid":"8f721cfb-31a9-4df9-a253-b5913fca5a17"},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">// rpc 应答&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; proxy-&gt;HandleRpcResponseMsg(payload)</span></p>","expand":true,"richText":true,"isActive":false,"uid":"00db9377-633c-4c69-b056-6c73314bc6cd"},"children":[]}]}]}]},{"data":{"text":"<p><span style=\"font-size: 18px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">心跳信息处理</span></p>","expand":true,"richText":true,"isActive":false,"uid":"15152bd4-efc9-481b-ac16-1aae008c0b94"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">更新接收到心跳信号的时间（用于检测心跳是否超时）</span></p>","uid":"10c677d0-97a2-492e-8c85-3e4596aeb381","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">peer_active = true;设置对端活跃</span></p>","uid":"91e3b6e6-ade3-415c-9a31-d7866d73e77b","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 18px;\">Rpc请求处理：HandleRpcRequestMsg</span></p>","expand":true,"richText":true,"isActive":false,"uid":"c152699b-47c3-4cec-a1f3-e0c1306d4bac"},"children":[{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">解析接收到的JSON字符串数据，封装到rpc_call_msg结构体中</span></p>","uid":"b363941e-9ec8-42b8-b9d5-87d69b042c11","expand":true,"richText":true,"isActive":false,"note":"    typedef struct rpc_call_msg_s {\n    int src; // 当前客户端ID\n    std::string dst;\n    int seqno;\n    std::string url;\n    std::string param;\n    std::string data;\n    int timeout;\n    } rpc_call_msg;\n    \n\n    rpc_call_msg rpc_call_info;"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">根据请求的dst，即目的服务名。找到对应的代理客户会话</span></p>","expand":true,"richText":true,"isActive":false,"uid":"8c9818d0-74d4-4eae-93af-8779991bb156","note":"it = local_client_ssn.find(rpc_call_info.dst);"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">调用代理客户会话的DoRpcRequestAsClient，将rpc请求发送到本地的rpc_server中</span></p>","expand":true,"richText":true,"isActive":false,"uid":"8ca3b197-85c0-463a-b364-5c8f4a5df46c","note":"int ClientSession::DoRpcRequestAsClient(rpc_call_msg& msg)"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">保存rpc请求的序列号到rpc请求的消息的映射rpc_call_lists[msg.seqno] = msg</span></p>","uid":"6c499f74-ffec-4fea-ad5f-642994a0458e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">将从总线上接收到的rpc请求的序列号入队：rpc_call_seq.push_back(msg.seqno)</span></p>","uid":"3208c5f4-2428-4d6a-a27b-bc55ea66450d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">构建url：light</span></p>","uid":"fbdefc43-c16e-4097-bd88-6d156ecfac78","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">利用客户端会话中创建的客户端对象，向服务器发送Rpc请求，同时设置响应回调函数</span></p>","expand":true,"richText":true,"isActive":false,"uid":"1f11c5c3-b683-4dde-88a1-b5c427ce092f","note":"    //向服务器发送RPC请求\n    ret = vsoa_client_call(client, VSOA_CLIENT_RPC_METHOD_GET, &request_url, NULL, \n                            on_request_callback, this, NULL);"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">回调函数开始</span></p>","uid":"7015a478-3c61-47f9-ab21-0a030c813052","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">从队列中获取并移出序列号</span></p>","expand":true,"richText":true,"isActive":false,"uid":"e70c136d-0a8f-4696-8cc7-0c339b41d55e"},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">从序列号中获取当初的请求消息rpc_call</span></p>","expand":true,"richText":true,"isActive":false,"uid":"9f6e967c-76e6-4c57-b057-b87493008934"},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">构造rpc_reply结构体,其中用rpc_call中dst和src为msg赋值</span></p>","expand":true,"richText":true,"isActive":false,"uid":"0694fa21-b69c-497a-8a30-3a0d34d13303"},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">调用DoRpcResponseSend发送rpc_reply</span></p>","expand":true,"richText":true,"isActive":false,"uid":"fed4ab75-abd5-4d95-abae-1c244e32c6a1"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">结构体转化为JSON字符串</span></p>","uid":"9f31e25d-5bfc-477d-ac86-9c857f2a6f64","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">CommunicateSend进行发送</span></p>","uid":"6b336729-dd91-4971-8727-f7e7d7322edf","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]}]},{"data":{"text":"<p><span style=\"font-size: 18px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">Rpc响应处理：HandleRpcResponseMsg</span></p>","expand":true,"richText":true,"isActive":false,"uid":"d29df006-985d-413e-8b89-f5bb05dc1243"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">解析接收到的JSON字符串数据，封装到rpc_reply_msg结构体中</span></p>","uid":"7321cf4c-eb8b-429d-9e0a-4d4f4995ce06","expand":true,"richText":true,"isActive":false,"note":"    typedef struct rpc_reply_msg_s {\n    std::string src;\n    int dst; \n    int seqno;\n    int code;\n    std::string message;\n    std::string param;\n    std::string data;\n    } rpc_reply_msg;\n\n    rpc_reply_msg rpc_reply_info;"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">根据响应的src，即源服务名。找到对应的代理服务会话</span></p>","expand":true,"richText":true,"isActive":false,"uid":"73359e40-43b7-4e15-9283-ceba812ab2bf","note":"it = proxy_server_ssn.find(rpc_reply_info.src);"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">调用对应代理服务会话的DoRpcResponse，将rpc响应发送到本地的rpc_client中</span></p>","expand":true,"richText":true,"isActive":false,"uid":"4de9af56-b530-49ca-b1a2-6adddeef3a8b","note":"int ClientSession::DoRpcRequestAsClient(rpc_call_msg& msg)"},"children":[{"data":{"text":"<p><span style=\"font-size: 14px; font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; color: rgb(116, 147, 54);\">将data和param封装到send缓冲区中</span></p>","uid":"c46c7ab3-8dbd-4188-b1d3-2dedf525bf18","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>vsoa_cli_id_t cli = rpc_call_seq2ctx[msg.seqno].client,根据请求的序列号获取客户端id</p>","expand":true,"richText":true,"isActive":false,"uid":"f681b625-6099-4de5-a63c-39d70ea6df22"},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(116, 147, 54); font-family: 微软雅黑, &quot;Microsoft YaHei&quot;; font-size: 14px;\">ret = vsoa_server_cli_reply(server, cli, 0, seqno, 0, &amp;send);将数据从代理服务器发送到客户端</span></p>","uid":"758f6360-301c-4967-b1ec-f32ac61e7458","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},"theme":{"template":"avocado","config":{}},"view":{"transform":{"scaleX":0.8999999999999999,"scaleY":0.8999999999999999,"shear":0,"rotate":0,"translateX":-2501.840909090908,"translateY":-197.54090909090928,"originX":0,"originY":0,"a":0.8999999999999999,"b":0,"c":0,"d":0.8999999999999999,"e":-2501.840909090908,"f":-197.54090909090928},"state":{"scale":0.8999999999999999,"x":-2501.840909090908,"y":-197.54090909090928,"sx":-2464.840909090908,"sy":-146.54090909090928}}}